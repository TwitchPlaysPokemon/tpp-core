// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using MusicCat.Player.Launch;
using MusicCat.Player.Pause;
using MusicCat.Player.Play;
using MusicCat.Player.PlayFile;
using MusicCat.Player.Position;
using MusicCat.Player.Stop;
using MusicCat.Player.Volume;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace MusicCat.Player
{
    /// <summary>
    /// Builds and executes requests for operations under \player
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class PlayerRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The launch property</summary>
        public global::MusicCat.Player.Launch.LaunchRequestBuilder Launch
        {
            get => new global::MusicCat.Player.Launch.LaunchRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The pause property</summary>
        public global::MusicCat.Player.Pause.PauseRequestBuilder Pause
        {
            get => new global::MusicCat.Player.Pause.PauseRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The play property</summary>
        public global::MusicCat.Player.Play.PlayRequestBuilder Play
        {
            get => new global::MusicCat.Player.Play.PlayRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The playFile property</summary>
        public global::MusicCat.Player.PlayFile.PlayFileRequestBuilder PlayFile
        {
            get => new global::MusicCat.Player.PlayFile.PlayFileRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The position property</summary>
        public global::MusicCat.Player.Position.PositionRequestBuilder Position
        {
            get => new global::MusicCat.Player.Position.PositionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The stop property</summary>
        public global::MusicCat.Player.Stop.StopRequestBuilder Stop
        {
            get => new global::MusicCat.Player.Stop.StopRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The volume property</summary>
        public global::MusicCat.Player.Volume.VolumeRequestBuilder Volume
        {
            get => new global::MusicCat.Player.Volume.VolumeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::MusicCat.Player.PlayerRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public PlayerRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/player", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::MusicCat.Player.PlayerRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public PlayerRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/player", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
